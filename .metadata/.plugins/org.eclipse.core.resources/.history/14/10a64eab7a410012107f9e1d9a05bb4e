package edu.ycp.cs481.inventory.gui;

import javax.swing.JPanel;
//import com.jgoodies.forms.layout.FormLayout;
//import com.jgoodies.forms.layout.ColumnSpec;
//import com.jgoodies.forms.layout.RowSpec;
import java.awt.CardLayout;
import java.awt.GridBagLayout;
import javax.swing.JLabel;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import javax.swing.JComboBox;

import edu.ycp.cs481.inventory.GetConnection;
import edu.ycp.cs481.inventory.Insert;
import edu.ycp.cs481.inventory.controller.InsertController;
import javax.swing.JButton;


public class InsertView extends JPanel {
	private JTextField textField;
	private JTextField textField_1;
	String genderValue, sizeValue, StyleName, CategoryName;
	Connection c = GetConnection.get(); //get connection established
	JComboBox genderCombo = new JComboBox();
	JComboBox sizeCombo = new JComboBox();


	/**
	 * Create the panel.
	 */
	@SuppressWarnings("unchecked")
	public InsertView() {
		setLayout(null);


		JLabel lblInsertAnItem = new JLabel("Insert an Item:");
		lblInsertAnItem.setFont(new Font("Tahoma", Font.BOLD, 21));
		lblInsertAnItem.setBounds(47, 18, 161, 56);
		add(lblInsertAnItem);

		JLabel lblCategory = new JLabel("Category:");
		lblCategory.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblCategory.setBounds(47, 86, 81, 21);
		add(lblCategory);

		JLabel lblGender = new JLabel("Gender: ");
		lblGender.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblGender.setBounds(47, 188, 81, 21);
		add(lblGender);

		JLabel lblStyle = new JLabel("Style: ");
		lblStyle.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblStyle.setBounds(47, 122, 81, 21);
		add(lblStyle);

		JLabel lblSize = new JLabel("Size:");
		lblSize.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblSize.setBounds(47, 155, 81, 21);
		add(lblSize);


		//GENERATE SIZE FROM SQL IN COMBOBOX
		sizeCombo.setBounds(148, 156, 60, 20);
		add(sizeCombo);



		try {
			Statement stmt = c.createStatement();
			ResultSet rs = stmt.executeQuery("SELECT Size_name FROM Size");
			while (rs.next()){

				sizeCombo.addItem(rs.getString("Size_name"));
				sizeValue = (String) sizeCombo.getSelectedItem();

			}
			rs.close();
			stmt.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		sizeCombo.addActionListener(new ActionListener(){
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				handleSizeChange();
				
			}
		});



		//GENDER COMBO, AUTOMATICALLY GENERATES gender ( VIA SQL)

		genderCombo.setBounds(148, 189, 60, 20);
		add(genderCombo);

		try {
			Statement st = c.createStatement();
			ResultSet rs = st.executeQuery("SELECT Gender_name FROM Gender");
			while   (rs.next()){
				genderCombo.addItem(rs.getString("Gender_name"));
				genderValue = (String) genderCombo.getSelectedItem();
			}
			rs.close();
			st.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		genderCombo.addActionListener(new ActionListener(){
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				handleGenderChange();
				
			}
		});
		//CATEGORY TEXT FIELD
		textField = new JTextField();
		textField.addFocusListener(new FocusAdapter(){
			@Override
			public void focusLost(FocusEvent e){
				handleCategoryChange();
			}
		});
		textField.setBounds(138, 86, 198, 20);
		add(textField);
		textField.setColumns(10);


		//STYLE TEXT FIELD
		textField_1 = new JTextField();
		textField_1.addFocusListener(new FocusAdapter(){
			@Override
			public void focusLost(FocusEvent e){
				handleStyleChange();
			}
		});

		textField_1.setBounds(138, 122, 198, 20);
		add(textField_1);
		textField_1.setColumns(10);

		
		//BUTTON TO INSERT!!!!!!!!!!!!
		JButton btnClickToInsert = new JButton("Click to Insert!");
		btnClickToInsert.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if((CategoryName != null) && (StyleName != null)){
					Insert.insert(c, CategoryName, StyleName, sizeValue, genderValue, 1, "");
				}else{
					System.out.println("Style or category empty");
				}
				
			
			}
		});
		btnClickToInsert.setBounds(274, 231, 120, 23);
		add(btnClickToInsert);

	}

	//HANDLE CATEGORY INPUT -- convert to String
	protected void handleCategoryChange() {
		CategoryName = textField.getText(); //store value in String CatgoryName 
		System.out.println("catrgory name string ===  " + CategoryName);

	}

	//HANDLE STYLE INPUT -- converts to String
	protected void handleStyleChange(){
		StyleName = textField_1.getText(); //stores input in String StyleName
		System.out.println("style name ==== " + StyleName);
	}
	protected void handleGenderChange(){
		genderValue = (String)genderCombo.getSelectedItem();
		System.out.println("gender = "+ genderValue);
	}
	protected void handleSizeChange(){
		sizeValue = (String)sizeCombo.getSelectedItem();
		System.out.println("Gender = " + genderValue);
	}
	
	
	
	

	
}
